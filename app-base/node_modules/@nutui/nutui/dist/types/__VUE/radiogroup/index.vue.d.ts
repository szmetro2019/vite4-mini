import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    modelValue: {
        type: (NumberConstructor | StringConstructor | BooleanConstructor)[];
        default: string;
    };
    direction: {
        type: StringConstructor;
        default: string;
    };
    textPosition: {
        type: StringConstructor;
        default: string;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("change" | "update:modelValue")[], "change" | "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    modelValue?: unknown;
    direction?: unknown;
    textPosition?: unknown;
} & {
    direction: string;
    modelValue: string | number | boolean;
    textPosition: string;
} & {}> & {
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    direction: string;
    modelValue: string | number | boolean;
    textPosition: string;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutRadioGroup: typeof _sfc_main;
  }
}     
      