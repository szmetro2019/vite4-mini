import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    attract: {
        type: BooleanConstructor;
        default: boolean;
    };
    direction: {
        type: StringConstructor;
        default: string;
    };
    boundary: {
        type: ObjectConstructor;
        default: () => {
            top: number;
            left: number;
            right: number;
            bottom: number;
        };
    };
}, {
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    myDrag: import("vue").Ref<any>;
    touchStart: (e: TouchEvent) => void;
    touchMove: (e: TouchEvent) => void;
    touchEnd: (e: TouchEvent) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    attract?: unknown;
    direction?: unknown;
    boundary?: unknown;
} & {
    direction: string;
    attract: boolean;
    boundary: Record<string, any>;
} & {}>, {
    direction: string;
    attract: boolean;
    boundary: Record<string, any>;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutDrag: typeof _sfc_main;
  }
}     
      