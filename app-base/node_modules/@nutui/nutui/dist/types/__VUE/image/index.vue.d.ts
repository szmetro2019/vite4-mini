import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    src: StringConstructor;
    fit: {
        type: PropType<import("./type").ImageFit>;
        default: string;
    };
    position: {
        type: PropType<string>;
        default: string;
    };
    alt: {
        type: StringConstructor;
        default: string;
    };
    width: {
        type: StringConstructor;
        default: string;
    };
    height: {
        type: StringConstructor;
        default: string;
    };
    round: {
        type: BooleanConstructor;
        default: boolean;
    };
    radius: (NumberConstructor | StringConstructor)[];
    showError: {
        type: BooleanConstructor;
        default: boolean;
    };
    showLoading: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    imageClick: (event: Event) => void;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    styles: import("vue").ComputedRef<{
        objectFit: string;
        objectPosition: string;
    }>;
    stylebox: import("vue").ComputedRef<{
        height?: string | undefined;
        width?: string | undefined;
        overflow?: string | undefined;
        borderRadius?: any;
    }>;
    error: () => void;
    load: () => void;
    loading: import("vue").Ref<boolean>;
    isError: import("vue").Ref<boolean>;
    slotLoding: import("vue").Ref<import("vue").Slot | undefined>;
    slotError: import("vue").Ref<import("vue").Slot | undefined>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("click" | "load" | "error")[], "click" | "load" | "error", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    src?: unknown;
    fit?: unknown;
    position?: unknown;
    alt?: unknown;
    width?: unknown;
    height?: unknown;
    round?: unknown;
    radius?: unknown;
    showError?: unknown;
    showLoading?: unknown;
} & {
    round: boolean;
    position: string;
    fit: import("./type").ImageFit;
    alt: string;
    width: string;
    height: string;
    showError: boolean;
    showLoading: boolean;
} & {
    src?: string | undefined;
    radius?: string | number | undefined;
}> & {
    onClick?: ((...args: any[]) => any) | undefined;
    onLoad?: ((...args: any[]) => any) | undefined;
    onError?: ((...args: any[]) => any) | undefined;
}, {
    round: boolean;
    position: string;
    fit: import("./type").ImageFit;
    alt: string;
    width: string;
    height: string;
    showError: boolean;
    showLoading: boolean;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutImage: typeof _sfc_main;
  }
}     
      