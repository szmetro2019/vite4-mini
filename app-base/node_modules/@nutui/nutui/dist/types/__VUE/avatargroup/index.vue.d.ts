import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    maxContent: {
        type: StringConstructor;
        default: string;
    };
    maxCount: {
        type: (NumberConstructor | StringConstructor)[];
        default: string;
    };
    maxBgColor: {
        type: StringConstructor;
        default: string;
    };
    maxColor: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    shape: {
        type: StringConstructor;
        default: string;
    };
    span: {
        type: StringConstructor;
        default: string;
    };
    zIndex: {
        type: StringConstructor;
        default: string;
    };
}, {
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    avatarGroupRef: import("vue").Ref<null>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    maxContent?: unknown;
    maxCount?: unknown;
    maxBgColor?: unknown;
    maxColor?: unknown;
    size?: unknown;
    shape?: unknown;
    span?: unknown;
    zIndex?: unknown;
} & {
    size: string;
    span: string;
    shape: string;
    zIndex: string;
    maxContent: string;
    maxCount: string | number;
    maxBgColor: string;
    maxColor: string;
} & {}>, {
    size: string;
    span: string;
    shape: string;
    zIndex: string;
    maxContent: string;
    maxCount: string | number;
    maxBgColor: string;
    maxColor: string;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutAvatarGroup: typeof _sfc_main;
  }
}     
      