import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    tabTitle: {
        type: StringConstructor;
        default: string;
    };
    name: {
        type: StringConstructor;
    };
    icon: {
        type: StringConstructor;
        default: string;
    };
    href: {
        type: StringConstructor;
        default: string;
    };
    num: {
        type: (NumberConstructor | StringConstructor)[];
        default: string;
    };
    activeImg: {
        type: StringConstructor;
        default: string;
    };
    img: {
        type: StringConstructor;
        default: string;
    };
    classPrefix: {
        type: StringConstructor;
        default: string;
    };
    dot: {
        type: BooleanConstructor;
        default: boolean;
    };
    fontClassName: {
        type: StringConstructor;
        default: string;
    };
    to: (StringConstructor | ObjectConstructor)[];
}, {
    state: {
        size: any;
        unactiveColor: any;
        activeColor: any;
        index: number;
    };
    active: import("vue").ComputedRef<boolean>;
    isHaveSlot: (slot: string) => import("vue").Slot | undefined;
    change: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    tabTitle?: unknown;
    name?: unknown;
    icon?: unknown;
    href?: unknown;
    num?: unknown;
    activeImg?: unknown;
    img?: unknown;
    classPrefix?: unknown;
    dot?: unknown;
    fontClassName?: unknown;
    to?: unknown;
} & {
    icon: string;
    img: string;
    classPrefix: string;
    fontClassName: string;
    dot: boolean;
    tabTitle: string;
    href: string;
    num: string | number;
    activeImg: string;
} & {
    name?: string | undefined;
    to?: string | Record<string, any> | undefined;
}>, {
    icon: string;
    img: string;
    classPrefix: string;
    fontClassName: string;
    dot: boolean;
    tabTitle: string;
    href: string;
    num: string | number;
    activeImg: string;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutTabbarItem: typeof _sfc_main;
  }
}     
      