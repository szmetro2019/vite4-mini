import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    id: StringConstructor;
    color: {
        type: StringConstructor;
        default: string;
    };
    msg: {
        type: StringConstructor;
        default: string;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    className: {
        type: StringConstructor;
        default: string;
    };
    background: {
        type: StringConstructor;
        default: string;
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    visible: {
        type: BooleanConstructor;
        default: boolean;
    };
    position: {
        type: StringConstructor;
        default: string;
    };
    teleportDisable: {
        type: BooleanConstructor;
        default: boolean;
    };
    onClose: FunctionConstructor;
    onClick: FunctionConstructor;
    unmount: FunctionConstructor;
}, {
    onAfterLeave: () => void;
    clickCover: () => void;
    isShowPopup: import("vue").Ref<boolean>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update:visible"[], "update:visible", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    id?: unknown;
    color?: unknown;
    msg?: unknown;
    duration?: unknown;
    className?: unknown;
    background?: unknown;
    type?: unknown;
    visible?: unknown;
    position?: unknown;
    teleportDisable?: unknown;
    onClose?: unknown;
    onClick?: unknown;
    unmount?: unknown;
} & {
    type: string;
    color: string;
    visible: boolean;
    duration: number;
    position: string;
    teleportDisable: boolean;
    background: string;
    className: string;
    msg: string;
} & {
    onClick?: Function | undefined;
    onClose?: Function | undefined;
    id?: string | undefined;
    unmount?: Function | undefined;
}> & {
    "onUpdate:visible"?: ((...args: any[]) => any) | undefined;
}, {
    type: string;
    color: string;
    visible: boolean;
    duration: number;
    position: string;
    teleportDisable: boolean;
    background: string;
    className: string;
    msg: string;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutNotify: typeof _sfc_main;
  }
}     
      