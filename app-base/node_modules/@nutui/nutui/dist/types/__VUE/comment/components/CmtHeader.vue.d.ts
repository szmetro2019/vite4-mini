import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    type: {
        type: StringConstructor;
        default: string;
    };
    info: {
        type: ObjectConstructor;
        default: () => void;
    };
    labels: {
        type: FunctionConstructor;
        default: () => string;
    };
}, {
    handleClick: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "handleClick"[], "handleClick", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    type?: unknown;
    info?: unknown;
    labels?: unknown;
} & {
    type: string;
    info: Record<string, any>;
    labels: Function;
} & {}> & {
    onHandleClick?: ((...args: any[]) => any) | undefined;
}, {
    type: string;
    info: Record<string, any>;
    labels: Function;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      Nut : typeof _sfc_main;
  }
}     
      