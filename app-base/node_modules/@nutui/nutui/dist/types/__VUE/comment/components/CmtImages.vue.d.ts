import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    type: {
        type: StringConstructor;
        default: string;
    };
    videos: {
        type: ArrayConstructor;
        default: () => never[];
    };
    images: {
        type: ArrayConstructor;
        default: () => never[];
    };
}, {
    isShowImage: import("vue").Ref<boolean>;
    initIndex: import("vue").Ref<number>;
    showImages: (type: string, index: string | number) => void;
    totalImages: import("vue").Ref<never[]>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("click" | "clickImages")[], "click" | "clickImages", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    type?: unknown;
    videos?: unknown;
    images?: unknown;
} & {
    type: string;
    images: unknown[];
    videos: unknown[];
} & {}> & {
    onClick?: ((...args: any[]) => any) | undefined;
    onClickImages?: ((...args: any[]) => any) | undefined;
}, {
    type: string;
    images: unknown[];
    videos: unknown[];
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      Nut : typeof _sfc_main;
  }
}     
      