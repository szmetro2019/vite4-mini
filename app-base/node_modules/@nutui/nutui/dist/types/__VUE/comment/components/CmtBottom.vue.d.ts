import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    type: {
        type: StringConstructor;
        default: string;
    };
    info: {
        type: ObjectConstructor;
        default: () => void;
    };
    operation: {
        type: ArrayConstructor;
        default: string[];
    };
}, {
    showPopver: import("vue").Ref<boolean>;
    operate: (type: string) => void;
    mergeOp: import("vue").Ref<never[]>;
    handleClick: () => void;
    translate: (keyPath: string, ...args: unknown[]) => string;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("handleClick" | "clickOperate")[], "handleClick" | "clickOperate", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    type?: unknown;
    info?: unknown;
    operation?: unknown;
} & {
    type: string;
    info: Record<string, any>;
    operation: unknown[];
} & {}> & {
    onHandleClick?: ((...args: any[]) => any) | undefined;
    onClickOperate?: ((...args: any[]) => any) | undefined;
}, {
    type: string;
    info: Record<string, any>;
    operation: unknown[];
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      Nut : typeof _sfc_main;
  }
}     
      