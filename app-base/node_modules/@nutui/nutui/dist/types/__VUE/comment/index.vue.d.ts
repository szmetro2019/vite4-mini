import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    headerType: {
        type: StringConstructor;
        default: string;
    };
    imagesRows: {
        type: StringConstructor;
        default: string;
    };
    ellipsis: {
        type: (NumberConstructor | StringConstructor | BooleanConstructor)[];
        default: boolean;
    };
    videos: {
        type: ArrayConstructor;
        default: () => never[];
    };
    images: {
        type: ArrayConstructor;
        default: () => never[];
    };
    info: {
        type: ObjectConstructor;
        default: () => void;
    };
    follow: {
        type: ObjectConstructor;
        default: () => void;
    };
    operation: {
        type: ArrayConstructor;
        default: string[];
    };
}, {
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    conEllipsis: import("vue").ComputedRef<string | number | true>;
    clickOperate: (t: string) => void;
    handleClick: () => void;
    clickImages: (value: any) => void;
    translate: (keyPath: string, ...args: unknown[]) => string;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("click" | "clickImages" | "clickOperate")[], "click" | "clickImages" | "clickOperate", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    headerType?: unknown;
    imagesRows?: unknown;
    ellipsis?: unknown;
    videos?: unknown;
    images?: unknown;
    info?: unknown;
    follow?: unknown;
    operation?: unknown;
} & {
    info: Record<string, any>;
    ellipsis: string | number | boolean;
    images: unknown[];
    videos: unknown[];
    operation: unknown[];
    headerType: string;
    imagesRows: string;
    follow: Record<string, any>;
} & {}> & {
    onClick?: ((...args: any[]) => any) | undefined;
    onClickImages?: ((...args: any[]) => any) | undefined;
    onClickOperate?: ((...args: any[]) => any) | undefined;
}, {
    info: Record<string, any>;
    ellipsis: string | number | boolean;
    images: unknown[];
    videos: unknown[];
    operation: unknown[];
    headerType: string;
    imagesRows: string;
    follow: Record<string, any>;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutComment: typeof _sfc_main;
  }
}     
      