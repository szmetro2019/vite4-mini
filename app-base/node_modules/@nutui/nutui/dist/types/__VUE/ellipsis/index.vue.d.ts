import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    content: {
        type: StringConstructor;
        default: string;
    };
    direction: {
        type: PropType<Direction>;
        default: string;
    };
    rows: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    expandText: {
        type: StringConstructor;
        default: string;
    };
    collapseText: {
        type: StringConstructor;
        default: string;
    };
    symbol: {
        type: StringConstructor;
        default: string;
    };
    lineHeight: {
        type: (NumberConstructor | StringConstructor)[];
        default: string;
    };
}, {
    root: import("vue").Ref<null>;
    ellipsis: import("vue").Ref<EllipsisedValue | undefined>;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    clickHandle: (type: number) => void;
    handleClick: () => void;
    exceeded: import("vue").Ref<boolean>;
    expanded: import("vue").Ref<boolean>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("click" | "change")[], "click" | "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    content?: unknown;
    direction?: unknown;
    rows?: unknown;
    expandText?: unknown;
    collapseText?: unknown;
    symbol?: unknown;
    lineHeight?: unknown;
} & {
    symbol: string;
    content: string;
    direction: Direction;
    rows: string | number;
    expandText: string;
    collapseText: string;
    lineHeight: string | number;
} & {}> & {
    onClick?: ((...args: any[]) => any) | undefined;
    onChange?: ((...args: any[]) => any) | undefined;
}, {
    symbol: string;
    content: string;
    direction: Direction;
    rows: string | number;
    expandText: string;
    collapseText: string;
    lineHeight: string | number;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutEllipsis: typeof _sfc_main;
  }
}     
      