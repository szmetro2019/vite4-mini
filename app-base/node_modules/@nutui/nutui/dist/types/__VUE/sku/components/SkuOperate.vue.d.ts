import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    btnOptions: {
        type: ArrayConstructor;
        default: () => string[];
    };
    btnExtraText: {
        type: StringConstructor;
        default: string;
    };
    buyText: {
        type: StringConstructor;
        default: string;
    };
    addCartText: {
        type: StringConstructor;
        default: string;
    };
    confirmText: {
        type: StringConstructor;
        default: string;
    };
}, {
    getBtnDesc: (type: string) => string;
    clickBtnOperate: (btn: string) => void;
    getSlots: (name: string) => import("vue").Slot | undefined;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("click" | "clickBtnOperate" | "changeSku" | "changeBuyCount")[], "click" | "clickBtnOperate" | "changeSku" | "changeBuyCount", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    btnOptions?: unknown;
    btnExtraText?: unknown;
    buyText?: unknown;
    addCartText?: unknown;
    confirmText?: unknown;
} & {
    confirmText: string;
    btnOptions: unknown[];
    btnExtraText: string;
    buyText: string;
    addCartText: string;
} & {}> & {
    onClick?: ((...args: any[]) => any) | undefined;
    onChangeSku?: ((...args: any[]) => any) | undefined;
    onClickBtnOperate?: ((...args: any[]) => any) | undefined;
    onChangeBuyCount?: ((...args: any[]) => any) | undefined;
}, {
    confirmText: string;
    btnOptions: unknown[];
    btnExtraText: string;
    buyText: string;
    addCartText: string;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      Nut : typeof _sfc_main;
  }
}     
      