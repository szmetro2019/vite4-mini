import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    stepperMax: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    stepperMin: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    stepperExtraText: {
        type: (BooleanConstructor | FunctionConstructor)[];
        default: boolean;
    };
    stepperTitle: {
        type: StringConstructor;
        default: string;
    };
}, {
    goodsCount: any;
    add: (value: number) => void;
    reduce: (value: number) => void;
    overlimit: (e: Event, action: string) => void;
    getExtraText: () => any;
    changeStepper: (value: number) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("click" | "add" | "reduce" | "changeStepper" | "overLimit" | "changeSku" | "clickBtnOptions")[], "reduce" | "click" | "add" | "changeStepper" | "overLimit" | "changeSku" | "clickBtnOptions", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    stepperMax?: unknown;
    stepperMin?: unknown;
    stepperExtraText?: unknown;
    stepperTitle?: unknown;
} & {
    stepperMax: string | number;
    stepperMin: string | number;
    stepperExtraText: boolean | Function;
    stepperTitle: string;
} & {}> & {
    onClick?: ((...args: any[]) => any) | undefined;
    onAdd?: ((...args: any[]) => any) | undefined;
    onReduce?: ((...args: any[]) => any) | undefined;
    onChangeStepper?: ((...args: any[]) => any) | undefined;
    onOverLimit?: ((...args: any[]) => any) | undefined;
    onChangeSku?: ((...args: any[]) => any) | undefined;
    onClickBtnOptions?: ((...args: any[]) => any) | undefined;
}, {
    stepperMax: string | number;
    stepperMin: string | number;
    stepperExtraText: boolean | Function;
    stepperTitle: string;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      Nut : typeof _sfc_main;
  }
}     
      