import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    name: {
        type: StringConstructor;
        default: string;
    };
    pannelKey: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
}, {
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
        'nut-timepannel--curr': boolean;
    }>;
    handlePannel: (pannelKey: number | string) => void;
    currentKey: import("vue").Ref<unknown>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "change"[], "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    name?: unknown;
    pannelKey?: unknown;
} & {
    name: string;
    pannelKey: string | number;
} & {}> & {
    onChange?: ((...args: any[]) => any) | undefined;
}, {
    name: string;
    pannelKey: string | number;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutTimePannel: typeof _sfc_main;
  }
}     
      