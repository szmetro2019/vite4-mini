import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
import { PropType } from 'vue';
import { TableColumnProps } from './types';
export declare const component: (componentName: string, translate: Function) => {
    components: {
        RenderColumn: {
            setup(props: any): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
                [key: string]: any;
            }>;
            props: {
                slots: PropType<(Function | undefined)[]>;
                record: ObjectConstructor;
            };
        };
    };
    props: {
        bordered: {
            type: BooleanConstructor;
            default: boolean;
        };
        columns: {
            type: PropType<TableColumnProps[]>;
            default: () => never[];
        };
        data: {
            type: ObjectConstructor;
            default: () => {};
        };
        summary: {
            type: FunctionConstructor;
            default: null;
        };
        striped: {
            type: BooleanConstructor;
            default: boolean;
        };
    };
    emits: string[];
    setup(props: any, { emit, slots }: any): {
        classes: import("vue").ComputedRef<{
            [x: string]: boolean;
        }>;
        cellClasses: (item: TableColumnProps) => {
            [x: string]: any;
            'nut-table__main__head__tr--border': any;
        };
        getColumnItem: (value: string) => TableColumnProps;
        getColumnItemStyle: (value: string) => any;
        handleSorterClick: (item: TableColumnProps) => void;
        sortDataItem: () => any;
        translate: Function;
        stylehead: (item: TableColumnProps) => string;
        stylecolumn: (item: TableColumnProps) => string;
        curData: any;
    };
};
