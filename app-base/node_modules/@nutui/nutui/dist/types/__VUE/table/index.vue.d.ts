import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    columns: {
        type: import("vue").PropType<import("./types").TableColumnProps[]>;
        default: () => never[];
    };
    data: {
        type: ObjectConstructor;
        default: () => {};
    };
    summary: {
        type: FunctionConstructor;
        default: null;
    };
    striped: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    cellClasses: (item: import("./types").TableColumnProps) => {
        [x: string]: any;
        'nut-table__main__head__tr--border': any;
    };
    getColumnItem: (value: string) => import("./types").TableColumnProps;
    getColumnItemStyle: (value: string) => any;
    handleSorterClick: (item: import("./types").TableColumnProps) => void;
    sortDataItem: () => any;
    translate: Function;
    stylehead: (item: import("./types").TableColumnProps) => string;
    stylecolumn: (item: import("./types").TableColumnProps) => string;
    curData: any;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, string[], string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    bordered?: unknown;
    columns?: unknown;
    data?: unknown;
    summary?: unknown;
    striped?: unknown;
} & {
    data: Record<string, any>;
    summary: Function;
    columns: import("./types").TableColumnProps[];
    bordered: boolean;
    striped: boolean;
} & {}> & {
    [x: string & `on${string}`]: ((...args: any[]) => any) | undefined;
}, {
    data: Record<string, any>;
    summary: Function;
    columns: import("./types").TableColumnProps[];
    bordered: boolean;
    striped: boolean;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutTable: typeof _sfc_main;
  }
}     
      