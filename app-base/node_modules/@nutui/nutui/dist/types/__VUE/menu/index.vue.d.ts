import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    activeColor: {
        type: StringConstructor;
        default: string;
    };
    overlay: {
        type: BooleanConstructor;
        default: true;
    };
    lockScroll: {
        type: BooleanConstructor;
        default: true;
    };
    duration: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    titleIcon: StringConstructor;
    closeOnClickOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    direction: {
        type: StringConstructor;
        default: string;
    };
    scrollFixed: {
        type: (NumberConstructor | StringConstructor | BooleanConstructor)[];
        default: boolean;
    };
    titleClass: StringConstructor[];
}, {
    toggleItem: (active: number) => void;
    children: any[];
    opened: import("vue").ComputedRef<boolean>;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
        'scroll-fixed': boolean;
    }>;
    barRef: import("vue").Ref<HTMLElement | undefined>;
    getClasses: (showPopup: boolean) => string;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    activeColor?: unknown;
    overlay?: unknown;
    lockScroll?: unknown;
    duration?: unknown;
    titleIcon?: unknown;
    closeOnClickOverlay?: unknown;
    direction?: unknown;
    scrollFixed?: unknown;
    titleClass?: unknown;
} & {
    overlay: boolean;
    duration: string | number;
    lockScroll: boolean;
    closeOnClickOverlay: boolean;
    direction: string;
    activeColor: string;
    scrollFixed: string | number | boolean;
} & {
    titleIcon?: string | undefined;
    titleClass?: string | undefined;
}>, {
    overlay: boolean;
    duration: string | number;
    lockScroll: boolean;
    closeOnClickOverlay: boolean;
    direction: string;
    activeColor: string;
    scrollFixed: string | number | boolean;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutMenu: typeof _sfc_main;
  }
}     
      