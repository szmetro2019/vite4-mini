import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    active: {
        type: (NumberConstructor | StringConstructor | ArrayConstructor)[];
    };
    accordion: {
        type: BooleanConstructor;
    };
    titleIcon: {
        type: StringConstructor;
        default: string;
    };
    titleIconSize: {
        type: StringConstructor;
        default: string;
    };
    titleIconColor: {
        type: StringConstructor;
        default: string;
    };
    titleIconPosition: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: StringConstructor;
        default: string;
    };
    iconSize: {
        type: StringConstructor;
        default: string;
    };
    iconColor: {
        type: StringConstructor;
        default: string;
    };
    rotate: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
}, {
    collapseDom: any;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("change" | "update:active")[], "change" | "update:active", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    active?: unknown;
    accordion?: unknown;
    titleIcon?: unknown;
    titleIconSize?: unknown;
    titleIconColor?: unknown;
    titleIconPosition?: unknown;
    icon?: unknown;
    iconSize?: unknown;
    iconColor?: unknown;
    rotate?: unknown;
} & {
    icon: string;
    iconSize: string;
    iconColor: string;
    titleIcon: string;
    titleIconSize: string;
    titleIconColor: string;
    titleIconPosition: string;
    accordion: boolean;
    rotate: string | number;
} & {
    active?: string | number | unknown[] | undefined;
}> & {
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:active"?: ((...args: any[]) => any) | undefined;
}, {
    icon: string;
    iconSize: string;
    iconColor: string;
    titleIcon: string;
    titleIconSize: string;
    titleIconColor: string;
    titleIconPosition: string;
    accordion: boolean;
    rotate: string | number;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutCollapse: typeof _sfc_main;
  }
}     
      