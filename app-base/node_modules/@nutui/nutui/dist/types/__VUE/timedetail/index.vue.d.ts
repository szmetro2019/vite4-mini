import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    times: {
        type: ArrayConstructor;
        default: () => never[];
    };
    detailKey: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
}, {
    getClass: (item: string) => {
        'nut-timedetail__detail__list__item': boolean;
        'nut-timedetail__detail__list__item--curr': boolean;
    } | undefined;
    renderData: import("vue").ComputedRef<any>;
    handleTime: (time: string) => void;
    currentKey: import("vue").Ref<unknown>;
    currentTime: import("vue").Ref<any[]>;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "select"[], "select", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    times?: unknown;
    detailKey?: unknown;
} & {
    times: unknown[];
    detailKey: string | number;
} & {}> & {
    onSelect?: ((...args: any[]) => any) | undefined;
}, {
    times: unknown[];
    detailKey: string | number;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutTimeDetail: typeof _sfc_main;
  }
}     
      