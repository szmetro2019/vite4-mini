import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    name: {
        type: StringConstructor;
        default: string;
    };
    touchMoveStopPropagation: {
        type: BooleanConstructor;
        default: boolean;
    };
    touchMovePreventDefault: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    leftRef: Ref<HTMLElement | undefined>;
    rightRef: Ref<HTMLElement | undefined>;
    open: (p?: SwipePosition) => void;
    close: () => void;
    onTouchStart(event: Event): void;
    onTouchMove(event: Event): void;
    onTouchEnd(): void;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    touchStyle: import("vue").ComputedRef<{
        transform: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("open" | "close")[], "open" | "close", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    name?: unknown;
    touchMoveStopPropagation?: unknown;
    touchMovePreventDefault?: unknown;
    disabled?: unknown;
} & {
    name: string;
    disabled: boolean;
    touchMoveStopPropagation: boolean;
    touchMovePreventDefault: boolean;
} & {}> & {
    onOpen?: ((...args: any[]) => any) | undefined;
    onClose?: ((...args: any[]) => any) | undefined;
}, {
    name: string;
    disabled: boolean;
    touchMoveStopPropagation: boolean;
    touchMovePreventDefault: boolean;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutSwipe: typeof _sfc_main;
  }
}     
      