import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    position: {
        type: StringConstructor;
        default: string;
    };
    top: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    bottom: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    container: {
        type: PropType<Element>;
    };
    zIndex: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("scroll" | "change")[], "scroll" | "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    position?: unknown;
    top?: unknown;
    bottom?: unknown;
    container?: unknown;
    zIndex?: unknown;
} & {
    bottom: string | number;
    top: string | number;
    zIndex: string | number;
    position: string;
} & {
    container?: Element | undefined;
}> & {
    onScroll?: ((...args: any[]) => any) | undefined;
    onChange?: ((...args: any[]) => any) | undefined;
}, {
    bottom: string | number;
    top: string | number;
    zIndex: string | number;
    position: string;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutSticky: typeof _sfc_main;
  }
}     
      