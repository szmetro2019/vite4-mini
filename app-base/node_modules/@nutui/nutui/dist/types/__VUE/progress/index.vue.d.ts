import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    percentage: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
        required: true;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    status: {
        type: StringConstructor;
        default: string;
    };
    strokeWidth: {
        type: (NumberConstructor | StringConstructor)[];
        default: string;
    };
    textInside: {
        type: BooleanConstructor;
        default: boolean;
    };
    showText: {
        type: BooleanConstructor;
        default: boolean;
    };
    strokeColor: {
        type: StringConstructor;
        default: string;
    };
    textColor: {
        type: StringConstructor;
        default: string;
    };
    textBackground: {
        type: StringConstructor;
        default: string;
    };
    iconName: {
        type: StringConstructor;
        default: string;
    };
    iconColor: {
        type: StringConstructor;
        default: string;
    };
    isShowPercentage: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    height: import("vue").Ref<string>;
    bgStyle: import("vue").ComputedRef<{
        width: string;
        background: string;
    }>;
    textStyle: import("vue").ComputedRef<{
        color: string;
    }>;
    percentage: import("vue").ComputedRef<string | number>;
    progressOuter: import("vue").Ref<any>;
    insideText: import("vue").Ref<any>;
    slotDefault: boolean;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    percentage?: unknown;
    size?: unknown;
    status?: unknown;
    strokeWidth?: unknown;
    textInside?: unknown;
    showText?: unknown;
    strokeColor?: unknown;
    textColor?: unknown;
    textBackground?: unknown;
    iconName?: unknown;
    iconColor?: unknown;
    isShowPercentage?: unknown;
} & {
    size: string;
    iconColor: string;
    iconName: string;
    status: string;
    percentage: string | number;
    strokeWidth: string | number;
    textInside: boolean;
    showText: boolean;
    strokeColor: string;
    textColor: string;
    textBackground: string;
    isShowPercentage: boolean;
} & {}>, {
    size: string;
    iconColor: string;
    iconName: string;
    status: string;
    percentage: string | number;
    strokeWidth: string | number;
    textInside: boolean;
    showText: boolean;
    strokeColor: string;
    textColor: string;
    textBackground: string;
    isShowPercentage: boolean;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutProgress: typeof _sfc_main;
  }
}     
      