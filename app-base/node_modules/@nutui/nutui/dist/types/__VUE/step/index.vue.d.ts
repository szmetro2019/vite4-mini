import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    title: {
        type: StringConstructor;
        default: string;
    };
    content: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: StringConstructor;
        default: null;
    };
    iconColor: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: (NumberConstructor | StringConstructor)[];
        default: string;
    };
}, {
    index: import("vue").ComputedRef<any>;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    handleClickStep: () => void;
    dot: any;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click-step"[], "click-step", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    title?: unknown;
    content?: unknown;
    icon?: unknown;
    iconColor?: unknown;
    size?: unknown;
} & {
    title: string;
    icon: string;
    size: string | number;
    content: string;
    iconColor: string;
} & {}> & {
    "onClick-step"?: ((...args: any[]) => any) | undefined;
}, {
    title: string;
    icon: string;
    size: string | number;
    content: string;
    iconColor: string;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutStep: typeof _sfc_main;
  }
}     
      