import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    image: {
        type: PropType<ImageInterface>;
        default: () => {};
    };
    video: {
        type: ObjectConstructor;
        default: () => {};
    };
    rootWidth: {
        type: NumberConstructor;
        default: number;
    };
    rootHeight: {
        type: NumberConstructor;
        default: number;
    };
    show: {
        type: BooleanConstructor;
        default: boolean;
    };
    initNo: {
        type: NumberConstructor;
        default: number;
    };
    showIndex: {
        type: BooleanConstructor;
        default: boolean;
    };
    minZoom: {
        type: NumberConstructor;
        default: number;
    };
    maxZoom: {
        type: NumberConstructor;
        default: number;
    };
}, {
    onTouchStart: (event: TouchEvent) => void;
    onTouchMove: (event: TouchEvent) => void;
    onTouchEnd: (event: TouchEvent) => void;
    getDistance: (touches: TouchList) => number;
    imageStyle: import("vue").ComputedRef<CSSProperties>;
    imageLoad: (event: TouchEvent) => void;
    closeSwiper: () => void;
    scale: import("vue").Ref<number>;
    moveX: import("vue").Ref<number>;
    moveY: import("vue").Ref<number>;
    moving: import("vue").Ref<boolean>;
    zooming: import("vue").Ref<boolean>;
    imageRatio: import("vue").Ref<number>;
    displayWidth: import("vue").Ref<number>;
    displayHeight: import("vue").Ref<number>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("close" | "scale")[], "close" | "scale", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    image?: unknown;
    video?: unknown;
    rootWidth?: unknown;
    rootHeight?: unknown;
    show?: unknown;
    initNo?: unknown;
    showIndex?: unknown;
    minZoom?: unknown;
    maxZoom?: unknown;
} & {
    video: Record<string, any>;
    show: boolean;
    image: ImageInterface;
    rootWidth: number;
    rootHeight: number;
    initNo: number;
    showIndex: boolean;
    minZoom: number;
    maxZoom: number;
} & {}> & {
    onClose?: ((...args: any[]) => any) | undefined;
    onScale?: ((...args: any[]) => any) | undefined;
}, {
    video: Record<string, any>;
    show: boolean;
    image: ImageInterface;
    rootWidth: number;
    rootHeight: number;
    initNo: number;
    showIndex: boolean;
    minZoom: number;
    maxZoom: number;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutImagePreview: typeof _sfc_main;
  }
}     
      