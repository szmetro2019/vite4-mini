import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    color: StringConstructor;
    shape: {
        type: PropType<import("./type").ButtonShape>;
        default: string;
    };
    plain: {
        type: BooleanConstructor;
        default: boolean;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    type: {
        type: PropType<import("./type").ButtonType>;
        default: string;
    };
    size: {
        type: PropType<import("./type").ButtonSize>;
        default: string;
    };
    block: {
        type: BooleanConstructor;
        default: boolean;
    };
    icon: {
        type: StringConstructor;
        default: string;
    };
    iconClassPrefix: {
        type: StringConstructor;
        default: string;
    };
    iconFontClassName: {
        type: StringConstructor;
        default: string;
    };
}, {
    handleClick: (event: MouseEvent) => void;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean | import("./type").ButtonShape | import("./type").ButtonType | import("./type").ButtonSize;
    }>;
    getStyle: import("vue").ComputedRef<CSSProperties>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    color?: unknown;
    shape?: unknown;
    plain?: unknown;
    loading?: unknown;
    disabled?: unknown;
    type?: unknown;
    size?: unknown;
    block?: unknown;
    icon?: unknown;
    iconClassPrefix?: unknown;
    iconFontClassName?: unknown;
} & {
    type: import("./type").ButtonType;
    icon: string;
    size: import("./type").ButtonSize;
    shape: import("./type").ButtonShape;
    plain: boolean;
    loading: boolean;
    disabled: boolean;
    block: boolean;
    iconClassPrefix: string;
    iconFontClassName: string;
} & {
    color?: string | undefined;
}> & {
    onClick?: ((...args: any[]) => any) | undefined;
}, {
    type: import("./type").ButtonType;
    icon: string;
    size: import("./type").ButtonSize;
    shape: import("./type").ButtonShape;
    plain: boolean;
    loading: boolean;
    disabled: boolean;
    block: boolean;
    iconClassPrefix: string;
    iconFontClassName: string;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutButton: typeof _sfc_main;
  }
}     
      