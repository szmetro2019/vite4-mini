import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    offset: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
}, {
    list: Ref<any>;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    count: Ref<number>;
    observer: Ref<{
        disconnect: () => void;
        observe: (target: Node, options?: MutationObserverInit | undefined) => void;
        takeRecords: () => MutationRecord[];
    } | null>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, never[], never, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    offset?: unknown;
} & {
    offset: string | number;
} & {}> & {}, {
    offset: string | number;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutSideNavBar: typeof _sfc_main;
  }
}     
      