import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
export declare const component: (componentName: string, nutIcon: object) => {
    components: {
        nutIcon: object;
    };
    props: {
        modelValue: {
            type: BooleanConstructor;
            default: boolean;
        };
        disabled: {
            type: BooleanConstructor;
            default: boolean;
        };
        textPosition: {
            type: StringConstructor;
            default: string;
        };
        iconSize: {
            type: (NumberConstructor | StringConstructor)[];
            default: string;
        };
        iconName: {
            type: StringConstructor;
            default: string;
        };
        iconActiveName: {
            type: StringConstructor;
            default: string;
        };
        iconIndeterminateName: {
            type: StringConstructor;
            default: string;
        };
        label: {
            type: StringConstructor;
            default: string;
        };
        iconClassPrefix: {
            type: StringConstructor;
            default: string;
        };
        iconFontClassName: {
            type: StringConstructor;
            default: string;
        };
        indeterminate: {
            type: BooleanConstructor;
            default: boolean;
        };
        shape: {
            type: StringConstructor;
            default: string;
        };
    };
    emits: string[];
    setup(props: any, { emit, slots }: any): () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
