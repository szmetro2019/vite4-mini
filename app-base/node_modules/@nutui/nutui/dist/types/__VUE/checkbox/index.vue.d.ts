import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    modelValue: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    textPosition: {
        type: StringConstructor;
        default: string;
    };
    iconSize: {
        type: (NumberConstructor | StringConstructor)[];
        default: string;
    };
    iconName: {
        type: StringConstructor;
        default: string;
    };
    iconActiveName: {
        type: StringConstructor;
        default: string;
    };
    iconIndeterminateName: {
        type: StringConstructor;
        default: string;
    };
    label: {
        type: StringConstructor;
        default: string;
    };
    iconClassPrefix: {
        type: StringConstructor;
        default: string;
    };
    iconFontClassName: {
        type: StringConstructor;
        default: string;
    };
    indeterminate: {
        type: BooleanConstructor;
        default: boolean;
    };
    shape: {
        type: StringConstructor;
        default: string;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, string[], string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    modelValue?: unknown;
    disabled?: unknown;
    textPosition?: unknown;
    iconSize?: unknown;
    iconName?: unknown;
    iconActiveName?: unknown;
    iconIndeterminateName?: unknown;
    label?: unknown;
    iconClassPrefix?: unknown;
    iconFontClassName?: unknown;
    indeterminate?: unknown;
    shape?: unknown;
} & {
    label: string;
    shape: string;
    disabled: boolean;
    iconClassPrefix: string;
    iconFontClassName: string;
    iconSize: string | number;
    modelValue: boolean;
    iconName: string;
    iconActiveName: string;
    iconIndeterminateName: string;
    textPosition: string;
    indeterminate: boolean;
} & {}> & {
    [x: string & `on${string}`]: ((...args: any[]) => any) | undefined;
}, {
    label: string;
    shape: string;
    disabled: boolean;
    iconClassPrefix: string;
    iconFontClassName: string;
    iconSize: string | number;
    modelValue: boolean;
    iconName: string;
    iconActiveName: string;
    iconIndeterminateName: string;
    textPosition: string;
    indeterminate: boolean;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutCheckbox: typeof _sfc_main;
  }
}     
      