import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    danmu: {
        type: ArrayConstructor;
        default: () => never[];
    };
    frequency: {
        type: NumberConstructor;
        default: number;
    };
    speeds: {
        type: NumberConstructor;
        default: number;
    };
    rows: {
        type: NumberConstructor;
        default: number;
    };
    top: {
        type: NumberConstructor;
        default: number;
    };
    loop: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    classTime: number;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    danmuList: any;
    dmBody: import("vue").Ref<HTMLDivElement>;
    dmContainer: import("vue").Ref<HTMLDivElement>;
    add: (word: string) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    danmu?: unknown;
    frequency?: unknown;
    speeds?: unknown;
    rows?: unknown;
    top?: unknown;
    loop?: unknown;
} & {
    top: number;
    rows: number;
    loop: boolean;
    danmu: unknown[];
    frequency: number;
    speeds: number;
} & {}>, {
    top: number;
    rows: number;
    loop: boolean;
    danmu: unknown[];
    frequency: number;
    speeds: number;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutBarrage: typeof _sfc_main;
  }
}     
      