import { App, PropType, CSSProperties } from 'vue';
declare type Install<T> = T & {
  install(app: App): void;
};
declare const _sfc_main: Install< import("vue").DefineComponent<{
    rate: {
        type: NumberConstructor;
        default: number;
    };
    digits: {
        type: NumberConstructor;
        default: number;
    };
    showSign: {
        type: BooleanConstructor;
        default: boolean;
    };
    showZero: {
        type: BooleanConstructor;
        default: boolean;
    };
    arrowLeft: {
        type: BooleanConstructor;
        default: boolean;
    };
    syncTextColor: {
        type: BooleanConstructor;
        default: boolean;
    };
    textColor: {
        type: StringConstructor;
        default: string;
    };
    riseColor: {
        type: StringConstructor;
        default: string;
    };
    dropColor: {
        type: StringConstructor;
        default: string;
    };
    iconSize: {
        type: StringConstructor;
        default: string;
    };
    upIconName: {
        type: StringConstructor;
        default: string;
    };
    downIconName: {
        type: StringConstructor;
        default: string;
    };
}, {
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    calcRate: import("vue").ComputedRef<string>;
    calcStyle: import("vue").ComputedRef<{
        color: string;
    }>;
    calcIconProps: import("vue").ComputedRef<{
        name: string;
        color: string;
        size: string;
    }>;
    rateTrend: import("vue").Ref<boolean>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    rate?: unknown;
    digits?: unknown;
    showSign?: unknown;
    showZero?: unknown;
    arrowLeft?: unknown;
    syncTextColor?: unknown;
    textColor?: unknown;
    riseColor?: unknown;
    dropColor?: unknown;
    iconSize?: unknown;
    upIconName?: unknown;
    downIconName?: unknown;
} & {
    digits: number;
    iconSize: string;
    rate: number;
    textColor: string;
    showSign: boolean;
    showZero: boolean;
    arrowLeft: boolean;
    syncTextColor: boolean;
    riseColor: string;
    dropColor: string;
    upIconName: string;
    downIconName: string;
} & {}>, {
    digits: number;
    iconSize: string;
    rate: number;
    textColor: string;
    showSign: boolean;
    showZero: boolean;
    arrowLeft: boolean;
    syncTextColor: boolean;
    riseColor: string;
    dropColor: string;
    upIconName: string;
    downIconName: string;
}>>;
export default _sfc_main;

declare module 'vue' {
  interface GlobalComponents {
      NutTrendArrow: typeof _sfc_main;
  }
}     
      