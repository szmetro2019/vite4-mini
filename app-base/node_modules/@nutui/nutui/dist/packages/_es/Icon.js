/*!
* @nutui/nutui v3.3.8 Mon Jun 12 2023 11:24:18 GMT+0800 (中国标准时间)
* (c) 2022 @jdf2e.
* Released under the MIT License.
*/
import { inject, computed, h } from "vue";
import { c as createComponent } from "./component.js";
import { p as pxCheck } from "./pxCheck.js";
import "../locale/lang";
const { componentName, create } = createComponent("icon");
const _sfc_main = create({
  props: {
    name: { type: String, default: "" },
    size: { type: [String, Number], default: "" },
    classPrefix: { type: String, default: "" },
    fontClassName: { type: String, default: "" },
    color: { type: String, default: "" },
    tag: { type: String, default: "i" }
  },
  emits: ["click"],
  setup(props, { emit, slots }) {
    const config = inject("nut-config-provider", null);
    const handleClick = (event) => {
      emit("click", event);
    };
    const isImage = () => {
      return props.name ? props.name.indexOf("/") !== -1 : false;
    };
    const classPrefix = computed(() => props.classPrefix || (config == null ? void 0 : config.classPrefix) || "nut-icon");
    const fontClassName = computed(() => props.fontClassName || (config == null ? void 0 : config.fontClassName) || "nutui-iconfont");
    return () => {
      var _a;
      const _isImage = isImage();
      return h(
        _isImage ? "img" : props.tag,
        {
          class: _isImage ? `${componentName}__img` : `${fontClassName.value} ${componentName} ${classPrefix.value}-${props.name}`,
          style: {
            color: props.color,
            fontSize: pxCheck(props.size),
            width: pxCheck(props.size),
            height: pxCheck(props.size)
          },
          onClick: handleClick,
          src: _isImage ? props.name : ""
        },
        (_a = slots.default) == null ? void 0 : _a.call(slots)
      );
    };
  }
});
export { _sfc_main as default };
