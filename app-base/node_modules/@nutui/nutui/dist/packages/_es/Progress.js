/*!
* @nutui/nutui v3.3.8 Mon Jun 12 2023 11:24:18 GMT+0800 (中国标准时间)
* (c) 2022 @jdf2e.
* Released under the MIT License.
*/
import { useSlots, ref, computed, onMounted, resolveComponent, openBlock, createElementBlock, createElementVNode, normalizeClass, normalizeStyle, toDisplayString, createCommentVNode, renderSlot, createBlock, mergeProps } from "vue";
import { c as createComponent } from "./component.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.js";
import "../locale/lang";
const { create } = createComponent("progress");
const _sfc_main = create({
  props: {
    percentage: {
      type: [Number, String],
      default: 0,
      required: true
    },
    size: {
      type: String,
      default: "base"
    },
    status: {
      type: String,
      default: ""
    },
    strokeWidth: {
      type: [Number, String],
      default: ""
    },
    textInside: {
      type: Boolean,
      default: false
    },
    showText: {
      type: Boolean,
      default: true
    },
    strokeColor: {
      type: String,
      default: ""
    },
    textColor: {
      type: String,
      default: ""
    },
    textBackground: {
      type: String,
      default: ""
    },
    iconName: {
      type: String,
      default: "checked"
    },
    iconColor: {
      type: String,
      default: "#439422"
    },
    isShowPercentage: {
      type: Boolean,
      default: true
    }
  },
  setup(props) {
    const slotDefault = !!useSlots().default;
    const height = ref(props.strokeWidth + "px");
    const progressOuter = ref();
    const insideText = ref();
    const percentage = computed(() => {
      return props.percentage >= 100 ? 100 : props.percentage;
    });
    const bgStyle = computed(() => {
      return {
        width: percentage.value + "%",
        background: props.strokeColor || ""
      };
    });
    const textStyle = computed(() => {
      return {
        color: props.textColor || ""
      };
    });
    onMounted(() => {
    });
    return {
      height,
      bgStyle,
      textStyle,
      percentage,
      progressOuter,
      insideText,
      slotDefault
    };
  }
});
const _hoisted_1 = { class: "nut-progress" };
const _hoisted_2 = {
  key: 0,
  class: "nut-progress-text"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_nut_icon = resolveComponent("nut-icon");
  return openBlock(), createElementBlock("div", _hoisted_1, [
    createElementVNode("div", {
      class: normalizeClass(["nut-progress-outer", [_ctx.showText && !_ctx.textInside ? "nut-progress-outer-part" : "", _ctx.size ? "nut-progress-" + _ctx.size : ""]]),
      ref: "progressOuter",
      style: normalizeStyle({ height: _ctx.height })
    }, [
      createElementVNode("div", {
        class: normalizeClass(["nut-progress-inner", _ctx.status == "active" ? "nut-active" : ""]),
        style: normalizeStyle(_ctx.bgStyle)
      }, [
        _ctx.showText && _ctx.textInside && !_ctx.slotDefault ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: "nut-progress-text nut-progress-insidetext",
          ref: "insideText",
          style: normalizeStyle({
            lineHeight: _ctx.height,
            left: `${_ctx.percentage}%`,
            transform: `translate(-${+_ctx.percentage}%,-50%)`,
            background: _ctx.textBackground || _ctx.strokeColor
          })
        }, [
          createElementVNode("span", {
            style: normalizeStyle(_ctx.textStyle)
          }, toDisplayString(_ctx.percentage) + toDisplayString(_ctx.isShowPercentage ? "%" : ""), 5)
        ], 4)) : createCommentVNode("", true),
        _ctx.showText && _ctx.textInside && _ctx.slotDefault ? (openBlock(), createElementBlock("div", {
          key: 1,
          ref: "insideText",
          style: normalizeStyle({
            position: `absolute`,
            top: `50%`,
            left: `${_ctx.percentage}%`,
            transform: `translate(-${+_ctx.percentage}%,-50%)`,
            transition: "all 0.4s"
          })
        }, [
          renderSlot(_ctx.$slots, "default")
        ], 4)) : createCommentVNode("", true)
      ], 6)
    ], 6),
    _ctx.showText && !_ctx.textInside ? (openBlock(), createElementBlock("div", _hoisted_2, [
      _ctx.status == "active" || _ctx.status == "" ? (openBlock(), createElementBlock("span", {
        key: 0,
        style: normalizeStyle(_ctx.textStyle)
      }, toDisplayString(_ctx.percentage) + toDisplayString(_ctx.isShowPercentage ? "%" : ""), 5)) : _ctx.status == "icon" ? (openBlock(), createBlock(_component_nut_icon, mergeProps({ key: 1 }, _ctx.$attrs, {
        size: "16px",
        name: _ctx.iconName,
        color: _ctx.iconColor
      }), null, 16, ["name", "color"])) : createCommentVNode("", true)
    ])) : createCommentVNode("", true)
  ]);
}
var index = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { index as default };
