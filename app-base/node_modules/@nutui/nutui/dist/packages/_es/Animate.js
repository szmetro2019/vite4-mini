/*!
* @nutui/nutui v3.3.8 Mon Jun 12 2023 11:24:18 GMT+0800 (中国标准时间)
* (c) 2022 @jdf2e.
* Released under the MIT License.
*/
import { toRefs, reactive, computed, openBlock, createElementBlock, createElementVNode, normalizeClass, renderSlot } from "vue";
import { c as createComponent } from "./component.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.js";
import "../locale/lang";
const { componentName, create } = createComponent("animate");
const _sfc_main = create({
  props: {
    type: {
      type: String,
      default: ""
    },
    action: {
      type: String,
      default: "initial"
    },
    loop: {
      type: Boolean,
      default: false
    }
  },
  emits: ["click"],
  setup(props, { emit }) {
    const { type, loop, action } = toRefs(props);
    const state = reactive({
      clicked: false
    });
    let classes = computed(() => {
      const prefixCls = componentName;
      return {
        "nut-ani-container": true,
        [`${prefixCls}-${type.value}`]: action.value === "initial" || state.clicked ? type.value : false,
        loop: loop.value
      };
    });
    const handleClick = (event) => {
      state.clicked = true;
      if (!loop.value) {
        setTimeout(() => {
          state.clicked = false;
        }, 1e3);
      }
      emit("click", event);
    };
    return { ...toRefs(state), classes, handleClick };
  }
});
const _hoisted_1 = { class: "nut-animate" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("view", _hoisted_1, [
    createElementVNode("view", {
      class: normalizeClass(_ctx.classes),
      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))
    }, [
      renderSlot(_ctx.$slots, "default")
    ], 2)
  ]);
}
var index = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { index as default };
